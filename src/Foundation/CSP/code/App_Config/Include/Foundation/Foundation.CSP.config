<?xml version="1.0" encoding="utf-8"?>
<!--
  Purpose: Configures Content Security Policy (CSP) header management through Sitecore CMS
  
  This configuration registers a pipeline processor that allows CSP headers to be managed
  through Sitecore items rather than web.config. When enabled, the processor will:
  - Read CSP settings from a Sitecore item
  - Build the CSP header dynamically
  - Inject it into HTTP responses
  - Fall back to web.config CSP header when disabled
-->
<configuration xmlns:patch="http://www.sitecore.net/xmlconfig/">
  <sitecore>
    <settings>
      <!-- 
        Path to the CSP settings item in Sitecore
        Default: /sitecore/content/RRA/Data/Settings/CSP
      -->
      <setting name="CSP.SettingsPath" value="/sitecore/content/RRA/Data/Settings/CSP" />
      
      <!-- 
        Database to use for retrieving CSP settings
        Use 'web' for published settings, 'master' for draft settings
        Default: master
      -->
      <setting name="CSP.Database" value="master" />
      
      <!-- 
        Skip CSP injection during content editing modes
        When true, CSP headers are not injected during:
        - Experience Editor
        - Preview mode
        - Debug mode
        - Any Sitecore backend operations
        Default: true (recommended for content authors)
      -->
      <setting name="CSP.SkipDuringEditing" value="true" />
      
      <!-- 
        Nonce token length for CSP script-src directive
        Longer nonces provide better security but use more memory
        Default: 32 bytes (recommended minimum)
      -->
      <setting name="CSP.NonceLength" value="32" />
      
      <!-- 
        Enable nonce token generation for CSP headers
        When true, nonce tokens are generated for each request
        Default: true (recommended for Google Analytics integration)
      -->
      <setting name="CSP.EnableNonce" value="true" />
      
      <!-- 
        Enable Google Analytics CSP directives
        When true, adds Google Analytics 4 domains to CSP headers
        Default: false (enable when using Google Analytics)
      -->
      <setting name="CSP.EnableGoogleAnalytics" value="false" />
      
      <!-- 
        Enable Google Signals CSP directives
        When true, adds additional domains required for Google Signals
        Only applies when CSP.EnableGoogleAnalytics is also true
        Default: false (enable when using Google Signals)
      -->
      <setting name="CSP.EnableGoogleSignals" value="false" />
    </settings>

    <pipelines>
      <httpRequestBegin>
        <!--
          CSP Header Processor
          
          Positioned after device resolution but before main processing.
          This ensures CSP headers are set early in the request lifecycle.
          
          When the Enabled checkbox in the CSP settings item is:
          - Checked: Uses CMS-managed CSP headers
          - Unchecked: Falls back to web.config CSP headers (if configured)
        -->
        <processor 
          type="Foundation.CSP.Pipelines.CspHeaderProcessor, Foundation.CSP"
          patch:after="processor[@type='Sitecore.Pipelines.HttpRequest.DeviceResolver, Sitecore.Kernel']" />
      </httpRequestBegin>
    </pipelines>

    <caches>
      <!--
        Cache for CSP settings to improve performance
        Size: 10MB (minimal memory footprint)
      -->
      <cache name="CSP.Settings" maxSize="10MB" />
    </caches>

    <services>
      <!--
        Register CSP services for dependency injection
        These services provide nonce generation and script injection capabilities
      -->
      <register serviceType="Foundation.CSP.Services.INonceService, Foundation.CSP" 
                implementationType="Foundation.CSP.Services.NonceService, Foundation.CSP" 
                lifetime="Transient" />
      
      <register serviceType="Foundation.CSP.Services.IScriptInjectionService, Foundation.CSP" 
                implementationType="Foundation.CSP.Services.ScriptInjectionService, Foundation.CSP" 
                lifetime="Transient" />
      
      <register serviceType="Foundation.CSP.Models.ICspSettingsProvider, Foundation.CSP" 
                implementationType="Foundation.CSP.Models.CspSettingsProvider, Foundation.CSP" 
                lifetime="Singleton" />
    </services>
  </sitecore>
</configuration>
